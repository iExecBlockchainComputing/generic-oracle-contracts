kind: pipeline
type: docker
name: default

trigger:
  event:
    exclude:
      - promote

steps:
  - name: install deps
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: compile
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run test

  # # require iexec instance not present on hardhat chain
  # - name: native deployment dry-run
  #   # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
  #   image: node:18.12.1
  #   commands:
  #     - npm run deploy-native

  - name: x-chain deployment dry-run
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    environment:
      AUTHORIZED_REPORTER: '0xa1135C5f1309eF9836679d31d7bea9846827f699'
    commands:
      - npm run deploy-x-chain

  - name: npm publish dry-run
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm publish --dry-run

---
kind: pipeline
type: docker
name: deploy-native

trigger:
  event:
    - promote
  target:
    - native-dev
    - native-production
  branch:
    - develop
    - main

steps:
  - name: install deps
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: compile
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run compile

  - name: native deploy and verify dev
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    environment:
      # todo change TARGET_OWNER
      TARGET_OWNER:
        from_secret: deployer-dev-address
      PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run deploy-native -- --network bellecour
      - sleep 30
      - npx hardhat verify --network bellecour $(cat deployed/bellecour/VerifiedResultOracle/address) $(cat deployed/bellecour/VerifiedResultOracle/constructorArgs)
    when:
      target:
        - native-dev
      branch:
        - develop

  - name: native deploy and verify production
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    environment:
      # todo change TARGET_OWNER
      TARGET_OWNER:
        from_secret: deployer-prod-address
      PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run deploy-native -- --network bellecour
      - sleep 30
      - npx hardhat verify --network bellecour $(cat deployed/bellecour/VerifiedResultOracle/address) $(cat deployed/bellecour/VerifiedResultOracle/constructorArgs)
    when:
      target:
        - native-production
      branch:
        - main

---
kind: pipeline
type: docker
name: deploy-x-chain

trigger:
  event:
    - promote
  target:
    - x-chain-dev
    - x-chain-production
  branch:
    - develop
    - main

steps:
  - name: ensure selected network
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    pull: always
    params:
      - NETWORK
    commands:
      - if [ "$NETWORK" == "" ]; then echo "missing NETWORK param" && exit 1; fi;
      - echo "selected network $NETWORK"

  - name: install deps
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: compile
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run compile

  - name: x-chain deploy and verify dev
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    params:
      - NETWORK
    environment:
      AUTHORIZED_REPORTER: '0x767a2d69d7278f200ae1f79a00ac2cae299dd784'
      PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
      INFURA_API_KEY:
        from_secret: infura-api-key
      ETHERSCAN_API_KEY:
        from_secret: etherscan-api-key
      POLYSCAN_API_KEY:
        from_secret: polyscan-api-key
    commands:
      - npm run deploy-x-chain -- --network $NETWORK
      - sleep 30
      - npx hardhat verify --network $NETWORK $(cat deployed/$NETWORK/SaltyForwarder/address) $(cat deployed/$NETWORK/SaltyForwarder/constructorArgs)
      - npx hardhat verify --network $NETWORK $(cat deployed/$NETWORK/SingleReporterOracle/address) $(cat deployed/$NETWORK/SingleReporterOracle/constructorArgs)
    when:
      target:
        - x-chain-dev
      branch:
        - develop

  - name: x-chain deploy and verify production
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    params:
      - NETWORK
    environment:
      AUTHORIZED_REPORTER: '0xa1135C5f1309eF9836679d31d7bea9846827f699'
      PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
      INFURA_API_KEY:
        from_secret: infura-api-key
      ETHERSCAN_API_KEY:
        from_secret: etherscan-api-key
      POLYSCAN_API_KEY:
        from_secret: polyscan-api-key
    commands:
      - npm run deploy-native -- --network $NETWORK
      - sleep 30
      - npx hardhat verify --network $NETWORK $(cat deployed/$NETWORK/SaltyForwarder/address) $(cat deployed/$NETWORK/SaltyForwarder/constructorArgs)
      - npx hardhat verify --network $NETWORK $(cat deployed/$NETWORK/SingleReporterOracle/address) $(cat deployed/$NETWORK/SingleReporterOracle/constructorArgs)
    when:
      target:
        - x-chain-production
      branch:
        - main

---
kind: pipeline
type: docker
name: publish npm nightly

trigger:
  event:
    - promote
  target:
    - nightly
  branch:
    - develop

steps:
  - name: install
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: compile
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run test

  - name: build
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run build

  - name: set version nightly
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - eval npm pkg set version="$(npm pkg get version)-nightly-$DRONE_COMMIT"

  - name: npm publish
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token
      tag: nightly
      access: public

---
kind: pipeline
type: docker
name: publish npm latest

trigger:
  event:
    - promote
  target:
    - latest
  branch:
    - main

steps:
  - name: install
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: compile
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test
    # fixed node version to work around https://github.com/NomicFoundation/hardhat/issues/3877
    image: node:18.12.1
    commands:
      - npm run test

  - name: npm publish
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token
      tag: latest
      access: public
